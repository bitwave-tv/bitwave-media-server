daemon off;
user root;

# error / warn
error_log stderr error;
error_log /tmp/nginx-error.log warn;

worker_processes 1;
events {
    worker_connections 1024;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4000;

        # RTMP Live Ingestion
        application live {
            live on;
            idle_streams off;

            on_publish http://api-server:3000/stream/authorize;
            on_publish_done http://api-server:3000/stream/end;

            # record flv archives
            recorder archive {
                record all manual;
                record_path /archives/rec;
                record_suffix _archive_%y.%m.%d.flv;
                record_unique on;
                record_append off;
                record_notify on;
            }

            # make previews
            recorder preview {
                record keyframes;
                record_max_frames 4;
                record_path /tmp/preview;
                record_interval 30s;

                exec_record_done /usr/local/bin/ffmpeg
                    -i $path
                    -vcodec png
                    -vframes 1
                    -an
                    -f rawvideo
                    -s 640x360
                    -ss 00:00:01
                    -y /tmp/preview/$name.png;
            }

            # relay to local HLS
            exec /usr/local/bin/ffmpeg
                -analyzeduration 0
                -i rtmp://localhost/$app/$name
                -c:a copy
                -c:v copy
                -f flv rtmp://127.0.0.1/hls/$name;
        }

        # Create HLS stream
        application hls {
            live on;
            hls on;
            hls_type live;
            hls_playlist_length 60s;
            hls_fragment 2s;
            hls_fragment_naming system;
            hls_fragment_slicing aligned;
            hls_nested on;
            hls_sync 1ms;
            hls_path /tmp/hls;
            idle_streams off;

            on_publish http://api-server:3000/stream/authorize;
        }

        # Create Transcoded HLS Stream
        application transcode {
            #allow 127.0.0.1;
            #allow api-server;
            #deny all;

            live on;
            hls on;
            hls_type live;
            hls_playlist_length 60s;
            hls_fragment 2s;
            hls_fragment_naming system;
            hls_fragment_slicing aligned;
            hls_nested on;
            hls_sync 1ms;
            hls_path /tmp/transcode;
            idle_streams off;

            hls_variant _144 BANDWIDTH=100000,RESOLUTION=256x144;
            hls_variant _480 BANDWIDTH=448000,RESOLUTION=854x480;
            hls_variant _src BANDWIDTH=2048000,RESOLUTION=1280x720;

            on_publish http://api-server:3000/stream/transcode;
        }
    }
}

http {
    sendfile off;
    tcp_nopush on;
    access_log off;
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types text/css application/javascript;

    server {
        listen 8080;
        root /bms-nginx-server/src/webserver/public;
        include /usr/local/nginx/conf/mime.types;

        location / {
            try_files $uri @node;
            add_header Access-Control-Allow-Origin *;
            add_header Cache-Control no-cache;
        }

        location @node {
            add_header Access-Control-Allow-Origin *;
            add_header Cache-Control no-cache;
            proxy_pass http://api-server:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        location /hls {
            log_not_found off;

            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        location /transcode {
            log_not_found off;

            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        location /preview {
            log_not_found off;

            types {
                image/png png;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        location /rec {
            autoindex on;
            root /archives;
        }

        location /stat {
            #allow 66.215.51.147;
            #allow 104.18.41.113;
            #deny all;

            auth_basic "Go Away";
            auth_basic_user_file  /bms-nginx-server/creds/.htpasswd;

            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root /bms-nginx-server/src/conf/;
        }

        location /control {
            rtmp_control all;

            # Enable CORS
            add_header Access-Control-Allow-Origin * always;
        }

        location /debug {
            autoindex on;
        }

        location = /ping {
            add_header Content-Type text/plain;
            return 200 "pong";
        }
    }
}
